🚀 PHP Roadmap: Zero to Hero

✅ Level 0: Setup & Basics

1. Install XAMPP or Local Server

Download XAMPP and install it.

Open XAMPP Control Panel and start Apache and MySQL.

Save your PHP files in:
C:\xampp\htdocs\your-folder\file.php

Access in browser via:
http://localhost/your-folder/file.php

✅ Level 1: Basic PHP Syntax

<?php
echo "Hello, World!";
?>

✅ Try this:

Create a file index.php

Paste the above code

Run it on http://localhost/your-folder/index.php

✅ Level 2: Variables & Data Types

<?php
$name = "Atik";
$age = 22;
$height = 5.9;
$is_coder = true;

echo "My name is $name and I am $age years old.";
?>

PHP Data Types:

string, int, float, bool, array, object, null

✅ Level 3: Conditions & Loops

<?php
$score = 85;

if ($score >= 90) {
  echo "A+";
} elseif ($score >= 80) {
  echo "A";
} else {
  echo "Below A";
}

// Loop
for ($i = 1; $i <= 5; $i++) {
  echo "Number: $i <br>";
}
?>
✅ Level 4: Functions

<?php
function greet($name) {
  return "Hello, $name!";
}

echo greet("Atik");
?>


---

✅ Level 5: Arrays

<?php
$fruits = ["Apple", "Banana", "Mango"];
echo $fruits[1]; // Banana

foreach ($fruits as $fruit) {
  echo "$fruit <br>";
}
?>
✅ Level 6: Forms & POST/GET

Create an HTML form:

<form action="form-handler.php" method="POST">
  <input type="text" name="username" />
  <input type="submit" />
</form>

Handle it in PHP (form-handler.php):

<?php
$name = $_POST["username"];
echo "Hello, $name!";
?>
✅ Level 7: PHP + MySQL (CRUD)

Connect to MySQL


$conn = new mysqli("localhost", "root", "", "test_db");
if ($conn->connect_error) {
  die("Connection failed: " . $conn->connect_error);
}

Create, Read, Update, Delete (CRUD operations)



---

✅ Level 8: WordPress Theme/Plugin Development

Once you know PHP basics:

Learn WordPress file structure

Create custom themes

Build basic plugins using hooks & filters

✅ Lesson 1: Setup & "Hello, World!" in PHP

🖥️ Step 1: Install XAMPP (if not already done)

1. Go to: https://www.apachefriends.org/index.html


2. Download XAMPP for Windows/Linux/Mac


3. Install it on your computer.




---

🔧 Step 2: Start the Server

1. Open XAMPP Control Panel


2. Click Start on both:

Apache (for running PHP)

MySQL (for database, later)

📁 Step 3: Create Your First PHP File

1. Go to:
C:\xampp\htdocs\ (Windows)
or
/Applications/XAMPP/htdocs/ (Mac)


2. Create a new folder, e.g., php-lessons


3. Inside that folder, create a file named:
index.php




---

✍️ Step 4: Write Your First PHP Code

Open index.php in any code editor (VS Code, Notepad++), and paste this:

<?php
echo "👋 Hello, World! I'm learning PHP!";
🌐 Step 5: Run It in Your Browser

1. Open your browser


2. Visit:
http://localhost/php-lessons/index.php



You should see:

👋 Hello, World! I'm learning PHP!


---

✅ What You Learned:

How to install and run PHP locally

What a PHP file looks like

How to output text using echo

✅ Lesson 2: PHP Variables & Data Types

📦 What is a Variable?

A variable is used to store data (like a name, number, etc.) so you can use it later.

In PHP, you define a variable with a $ sign:

<?php
$name = "Atik";
$age = 22;
$height = 5.8;
$is_student = true;

echo "My name is $name and I am $age years old.";
?>
🧪 PHP Data Types:

Type	Example	Description

string	"Atik"	Text values
int	22	Whole numbers
float	5.8	Decimal numbers
bool	true, false	Yes/No values
array	["apple", "banana"]	List of items
null	null	Empty or no value
✅ Example: Display All Types

<?php
$name = "Atik";         // string
$age = 22;              // int
$height = 5.8;          // float
$is_coder = true;       // bool
$skills = ["HTML", "CSS", "PHP"]; // array
$job = null;            // null

echo "Name: $name <br>";
echo "Age: $age <br>";
echo "Height: $height <br>";
echo "Is a coder? " . ($is_coder ? "Yes" : "No") . "<br>";
echo "First skill: " . $skills[0] . "<br>";
echo "Job: " . $job . "<br>";
?>

> 🔍 ($is_coder ? "Yes" : "No") is a ternary operator, used to write simple if-else conditions in one line.


✅ Lesson 3: Conditions & Loops in PHP

🔹 1. Conditional Statements (if, else, elseif)

➤ Example 1: Grading System

<?php
$score = 87;

if ($score >= 90) {
    echo "Grade: A+";
} elseif ($score >= 80) {
    echo "Grade: A";
} elseif ($score >= 70) {
    echo "Grade: B";
} else {
    echo "Grade: Fail";
}
?>

🧠 Explanation:

PHP checks conditions top to bottom.

As soon as one is true, it runs that block and skips the rest.
🔹 2. Comparison Operators

Operator	Meaning	Example ($a = 5, $b = 3)

==	Equal to	$a == $b → false
!=	Not equal	$a != $b → true
>	Greater than	$a > $b → true
<	Less than	$a < $b → false
>=	Greater or equal	$a >= 5 → true
<=	Less or equal	$a <= 3 → false
🔄 3. Loops (for, while, foreach)

➤ Example 2: for Loop (Print 1 to 5)

<?php
for ($i = 1; $i <= 5; $i++) {
    echo "Number: $i <br>";
}
?>

➤ Example 3: while Loop

<?php
$x = 1;
while ($x <= 3) {
    echo "x = $x <br>";
    $x++;
}
?>

➤ Example 4: foreach Loop (Array)

<?php
$fruits = ["Apple", "Banana", "Mango"];

foreach ($fruits as $fruit) {
    echo "Fruit: $fruit <br>";
}
?>
